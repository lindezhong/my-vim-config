<?xml version=&quot;1.0&quot;?>
<!-- 
/*
 * Copyright 2001-2004 The Apache Software Foundation.
 * 
 * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 -->

<!DOCTYPE module PUBLIC
        &quot;-//Puppy Crawl//DTD Check Configuration 1.3//EN&quot;
        &quot;https://checkstyle.org/dtds/configuration_1_3.dtd&quot;>

<!--

  Checkstyle configuration that checks the sun coding conventions from:

    - the Java Language Specification at
      http://java.sun.com/docs/books/jls/second_edition/html/index.html

    - the Sun Code Conventions at http://java.sun.com/docs/codeconv/

    - the Javadoc guidelines at
      http://java.sun.com/j2se/javadoc/writingdoccomments/index.html

    - the JDK Api documentation http://java.sun.com/j2se/docs/api/index.html

    - some best practices

  Checkstyle is very configurable. Be sure to read the documentation at
  http://checkstyle.sf.net (or in your downloaded distribution).

  Most Checks are configurable, be sure to consult the documentation.

  To completely disable a check, just comment it out or delete it from the file.

  Finally, it is worth reading the documentation.

-->

<module name=&quot;Checker&quot;>

    <property name=&quot;cacheFile&quot; value=&quot;&dollar;{checkstyle.cache.file}&quot;/>
    <module name=&quot;LineLength&quot;>
        <property name=&quot;max&quot; value=&quot;120&quot;/>
    </module>
    <!-- Checks that a package.html file exists for each package.     -->
    <!-- See http://checkstyle.sf.net/config_javadoc.html#PackageHtml -->
    <module name=&quot;JavadocPackage&quot;>
        <property name=&quot;allowLegacy&quot; value=&quot;true&quot; />
    </module>

    <!-- Checks whether files end with a new line.                        -->
    <!-- See http://checkstyle.sf.net/config_misc.html#NewlineAtEndOfFile -->
    <module name=&quot;NewlineAtEndOfFile&quot;/>

    <!-- Checks that property files contain the same keys.         -->
    <!-- See http://checkstyle.sf.net/config_misc.html#Translation -->
    <module name=&quot;Translation&quot;/>

    <!-- Checks for Size Violations.                    -->
    <!-- See http://checkstyle.sf.net/config_sizes.html -->
    <module name=&quot;FileLength&quot;/>
    <module name=&quot;FileTabCharacter&quot;/>

    <module name=&quot;RegexpSingleline&quot;>
        <property name=&quot;format&quot; value=&quot;\s+&dollar;&quot;/>
        <property name=&quot;message&quot; value=&quot;Line has trailing spaces.&quot;/>
    </module>

    <module name=&quot;TreeWalker&quot;>

        <!-- Checks for Javadoc comments.                     -->
        <!-- See http://checkstyle.sf.net/config_javadoc.html -->
        <module name=&quot;JavadocMethod&quot;/>
        <module name=&quot;JavadocType&quot;>
          <property name=&quot;scope&quot; value=&quot;public&quot;/>
        </module>
        <module name=&quot;JavadocVariable&quot;>
          <property name=&quot;scope&quot; value=&quot;public&quot;/>
        </module>
        <module name=&quot;JavadocStyle&quot;/>

        <!-- Checks for Naming Conventions.                  -->
        <!-- See http://checkstyle.sf.net/config_naming.html -->
        <module name=&quot;ConstantName&quot;/>
        <module name=&quot;LocalFinalVariableName&quot;/>
        <module name=&quot;LocalVariableName&quot;/>
        <module name=&quot;MemberName&quot;/>
        <module name=&quot;MethodName&quot;/>
        <module name=&quot;PackageName&quot;/>
        <module name=&quot;ParameterName&quot;/>
        <module name=&quot;StaticVariableName&quot;/>
        <module name=&quot;TypeName&quot;/>


        <!-- Checks for Headers                                -->
        <!-- See http://checkstyle.sf.net/config_header.html   -->
        <!-- <module name=&quot;Header&quot;>                            -->
            <!-- The follow property value demonstrates the ability     -->
            <!-- to have access to ANT properties. In this case it uses -->
            <!-- the &dollar;{basedir} property to allow Checkstyle to be run  -->
            <!-- from any directory within a project. See property      -->
            <!-- expansion,                                             -->
            <!-- http://checkstyle.sf.net/config.html#properties        -->
            <!-- <property                                              -->
            <!--     name=&quot;headerFile&quot;                                  -->
            <!--     value=&quot;&dollar;{basedir}/java.header&quot;/>                   -->
        <!-- </module> -->

        <!-- Following interprets the header file as regular expressions. -->
        <!-- <module name=&quot;RegexpHeader&quot;/>                                -->


        <!-- Checks for imports                              -->
        <!-- See http://checkstyle.sf.net/config_import.html -->
        <module name=&quot;AvoidStarImport&quot;/>
        <module name=&quot;IllegalImport&quot;>
            <property name=&quot;illegalPkgs&quot; value=&quot;sun.*, org.apache.commons.logging&quot;/>
        </module>

        <module name=&quot;RedundantImport&quot;/>
        <module name=&quot;UnusedImports&quot;/>


        <module name=&quot;MethodLength&quot;/>
        <module name=&quot;ParameterNumber&quot;/>


        <!-- Checks for whitespace                               -->
        <!-- See http://checkstyle.sf.net/config_whitespace.html -->
        <module name=&quot;EmptyForIteratorPad&quot;/>
        <module name=&quot;MethodParamPad&quot;/>

        <module name=&quot;NoWhitespaceAfter&quot;>
          <!-- Default tokens and additional GENERIC_START -->
          <property name=&quot;tokens&quot; value=&quot;ARRAY_INIT, BNOT, DEC, DOT, INC, LNOT, UNARY_MINUS, UNARY_PLUS&quot;/>
        </module>
        
        <module name=&quot;NoWhitespaceBefore&quot;>
          <!-- Default tokens and additional GENERIC_START and GENERIC_END -->
          <property name=&quot;tokens&quot; value=&quot;SEMI, POST_DEC, POST_INC, GENERIC_START, GENERIC_END&quot;/>
        </module>
        
        <module name=&quot;WhitespaceAfter&quot;>
          <!-- Default tokens and additional GENERIC_END -->
          <property name=&quot;tokens&quot; value=&quot;COMMA, SEMI, TYPECAST&quot;/>
        </module>
        
        <module name=&quot;WhitespaceAround&quot;>
          <!-- Default tokens without GENERIC_START and GENERIC_END -->
          <property name=&quot;tokens&quot; value=&quot;ASSIGN, BAND, BAND_ASSIGN,
        BOR, BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN, COLON,
        DIV, DIV_ASSIGN, EQUAL, GE, GT, LAND, LCURLY, LE, 
        LITERAL_ASSERT, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE, 
        LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_RETURN,
        LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LOR, LT, MINUS,
        MINUS_ASSIGN, MOD, MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN,
        QUESTION, RCURLY, SL, SLIST, SL_ASSIGN, SR, SR_ASSIGN, STAR, STAR_ASSIGN,
        TYPE_EXTENSION_AND, WILDCARD_TYPE&quot;/>
        </module>
        
        <module name=&quot;OperatorWrap&quot;/>
        <module name=&quot;ParenPad&quot;/>
        <module name=&quot;TypecastParenPad&quot;/>


        <!-- Modifier Checks                                    -->
        <!-- See http://checkstyle.sf.net/config_modifiers.html -->
        <module name=&quot;ModifierOrder&quot;/>
        <module name=&quot;RedundantModifier&quot;/>


        <!-- Checks for blocks. You know, those {}'s         -->
        <!-- See http://checkstyle.sf.net/config_blocks.html -->
        <module name=&quot;AvoidNestedBlocks&quot;/>
        <module name=&quot;EmptyBlock&quot;/>
        <module name=&quot;LeftCurly&quot;/>
        <module name=&quot;NeedBraces&quot;/>
        <module name=&quot;RightCurly&quot;/>


        <!-- Checks for common coding problems               -->
        <!-- See http://checkstyle.sf.net/config_coding.html -->
        <module name=&quot;EmptyStatement&quot;/>
        <module name=&quot;EqualsHashCode&quot;/>
        <module name=&quot;IllegalInstantiation&quot;/>
        <module name=&quot;InnerAssignment&quot;/>
        <module name=&quot;MagicNumber&quot;/>
        <module name=&quot;MissingSwitchDefault&quot;/>
        <module name=&quot;SimplifyBooleanExpression&quot;/>
        <module name=&quot;SimplifyBooleanReturn&quot;/>

        <!-- Checks for class design                         -->
        <!-- See http://checkstyle.sf.net/config_design.html -->
        <module name=&quot;DesignForExtension&quot;/>
        <module name=&quot;FinalClass&quot;/>
        <module name=&quot;HideUtilityClassConstructor&quot;/>
        <module name=&quot;InterfaceIsType&quot;/>
        <module name=&quot;VisibilityModifier&quot;/>


        <!-- Miscellaneous other checks.                   -->
        <!-- See http://checkstyle.sf.net/config_misc.html -->
        <module name=&quot;ArrayTypeStyle&quot;/>
        <module name=&quot;FinalParameters&quot;/>

        <module name=&quot;TodoComment&quot;/>
        <module name=&quot;UpperEll&quot;/>

    </module>

</module>
